import pygame
import random
import time
pygame.init()

win_width, win_height= (500, 500)
win = pygame.display.set_mode((win_width, win_height))
pygame.display.set_caption("BY AMAN GOYAL")


def gameloop():
    # colors
    white = (255, 255, 255)
    red = (255, 0, 0)
    green = (0, 255, 0)
    blue = (0, 0, 255)
    black = (0, 0, 0)

    # variables
    snake_width, snake_height = (10, 10)
    x_cord_snake, y_cord_snake = (100, 100)
    x_cord_change, y_cord_change = (0, 0)

    # apple variables
    apple_x_cordinates = random.randrange((win_width-snake_width)/10.0)*10.0
    apple_y_cordinates = random.randrange((win_height-snake_height)/10.0)*10.0
    apple_height, apple_width = (20, 20)

    # snake_length
    snake_length = 1
    letting_x=0
    snake_list = []

    def snake():

        if len(snake_list) > snake_length+ letting_x:
            del snake_list[0]
        for XnY in snake_list:
            win.fill(blue, rect=[XnY[0], XnY[1], snake_width, snake_height])

    font = pygame.font.SysFont(None, 24)
    def message_to_print(msg, color):
        text_on_screen = font.render(msg, True, color)
        win.blit(text_on_screen, [win_width/3, win_height/2])
        pygame.display.update()


    run = True

    gameover = False
    while run:
        # quitting
        while gameover == True:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    quit()
                    pygame.quit()

                win.fill(white)
                message_to_print("You loose, Press C to Continue, Q to quit", red)
                key_press = pygame.key.get_pressed()
                if key_press[pygame.K_q]:
                    win.fill(white)
                    message_to_print("Quitting..", black)
                    time.sleep(0.5)
                    run = False
                    quit()
                    pygame.quit()
                elif key_press[pygame.K_c]:
                    gameloop()





        for event in pygame.event.get():
            # print(event)
            if event.type == pygame.QUIT:
                run = False
                quit()
                pygame.quit()

        # BgColor
        win.fill(white)

        #  # snake movement
        arrow_key = pygame.key.get_pressed()
        if arrow_key[pygame.K_DOWN]:
            x_cord_change, y_cord_change = (0,1)
        elif arrow_key[pygame.K_UP]:
            x_cord_change, y_cord_change = (0, -1)
        elif arrow_key[pygame.K_RIGHT]:
            x_cord_change, y_cord_change = (1, 0)
        elif arrow_key[pygame.K_LEFT]:
            x_cord_change, y_cord_change = (-1, 0)

        x_cord_snake +=  x_cord_change
        y_cord_snake += y_cord_change


        # DEBUG CONTROLS
        # if arrow_key[pygame.K_DOWN]:
        #     y_cord_snake +=10
        # elif arrow_key[pygame.K_UP]:
        #     y_cord_snake -=10
        # elif arrow_key[pygame.K_RIGHT]:
        #     x_cord_snake +=10
        # elif arrow_key[pygame.K_LEFT]:
        #     x_cord_snake -=10

        # Snake Length Increase Funciton
        if not snake_list or snake_list[-1] != ((x_cord_snake, y_cord_snake)):
            snake_list.append((x_cord_snake, y_cord_snake))
        snake()

        # changing apple cords on overlap and Increasing Snake Length
        if x_cord_snake > apple_x_cordinates - snake_width and x_cord_snake < apple_x_cordinates + apple_width and y_cord_snake > apple_y_cordinates - snake_height and y_cord_snake < apple_y_cordinates + apple_height:
            apple_x_cordinates = random.randrange((win_width - snake_width) / 10.0) * 10.0
            apple_y_cordinates = random.randrange((win_height - snake_height) / 10.0) * 10.0
            snake_length +=1
            letting_x +=10

        # gameover function
        if x_cord_snake > win_width - snake_width or y_cord_snake > win_height - snake_height  or x_cord_snake < 0 or y_cord_snake < 0:
            gameover = True

        # Snake
        win.fill(black, rect=[x_cord_snake, y_cord_snake, snake_width, snake_height])

        # apple
        win.fill(red, rect=[apple_x_cordinates, apple_y_cordinates, apple_width, apple_height])


        # displa updtae
        pygame.display.update()
        # time.sleep(0.0029)
        time.sleep(0.009)
    quit()
    pygame.quit()

gameloop()
